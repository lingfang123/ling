<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<!-- 指定 ehcache 的配置文件，下面会给到 -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>
   
    <!-- 密码加密 -->
    <bean id="myRealm" class="com.jyb.util.MyRealm">
    	<property name="credentialsMatcher">
    		<!-- 指定加密算法为MD5  这样可以把前台传过来的密码进行MD5加密-->
    		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    			<property name="hashAlgorithmName" value="MD5"></property>
    			<!-- 指定加密的次数 -->
				<property name="hashIterations" value="10"></property>
    		</bean>
    	</property>
    </bean>
    
    <!-- 配置 Shiro 的 SecurityManager Bean. -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="cacheManager" ref="cacheManager"></property>
    	<property name="realm" ref="myRealm"></property>
    </bean>
    
    <!-- 配置shiro过滤方式 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

	<!-- 配置 ShiroFilter bean: 该 bean 的 id 必须和 web.xml 文件中配置的 shiro filter 的 name 一致  -->
	<bean id="shiroFiler" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 装配 securityManager -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 配置登陆页面 -->
		<property name="loginUrl" value="/login/userLogin"></property>
		<!-- 登录成功后跳转的页面 -->
		<property name="successUrl" value="/user/list"></property>
		<!-- 登录失败 -->
		<property name="unauthorizedUrl" value="/fail.jsp"></property>
		<!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->
        <property name="filterChainDefinitions">
            <value>
             	<!-- 	anon  不需要认证
                  		authc 需要认证
                  		user  验证通过或RememberMe登录的都可以 -->
                <!-- 配置登出: 使用 logout 过滤器 -->
                <!-- /user/** = logout
                	/user/** = anon -->
                /register/** = anon
                /login/** = anon
                /invest/** = anon
                
                /js/** = anon
                /jpg/** = anon
                /user/** = anon
               <!--  /login.jsp = roles[user]
                /** = authc -->
                /user/** = user          
            </value>
        </property>
	</bean>
</beans>